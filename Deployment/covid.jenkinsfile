def templatePath = 'https://raw.githubusercontent.com/355gts/CovidCore/master/Deployment/covid-template.yaml'
def templateName = 'covid-template'
def testTemplatePath = 'https://raw.githubusercontent.com/355gts/CovidCore/master/Deployment/covid-python-template.yaml'
def testTemplateName = 'covid-python-template'
pipeline{
    agent any
    options {
        timeout(time:20, unit: 'MINUTES')
    }
    stages {
      stage('preamble') {
            steps {
                script {
                    openshift.withCluster() {
                        openshift.withProject() {
                            echo "Using project: ${openshift.project()}"
                        }                        
                    }
                }          
            }
        }
        stage('create') 
        {
            steps 
            {
                script
                {
                    openshift.withCluster() 
                    {                      
                        openshift.withProject()
                        {
                            openshift.newApp(templatePath, "--labels='test=true'")                            
                        }
                    }
                }
            }
        }      
        stage('build') 
        {
            steps 
            {
                script 
                {
                    echo "Starting Build"
                    openshift.withCluster()
                    {
                        openshift.withProject() 
                        {
                            echo "Getting build configs"
                            def buildConfigs = openshift.selector("bc",[test: "true", app: "covid"])
                            echo "Got build configs - ${buildConfigs.names()}"
                            buildConfigs.withEach
                            {
                                def builds = openshift.selector(it.name()).related('builds')
                                builds.untilEach(1) 
                                {
                                    echo "Checking ${it.name()} build status"
                                    return (it.object().status.phase == "Complete")
                                }
                            }
                            echo "All builds complete"
                        }                  
                    }
                } // script
            } // steps      
        } // stage      
        stage('deploy')
        {          
            steps 
            {
                script 
                {
                    openshift.withCluster()
                    {
                        openshift.withProject() 
                        {
                            echo "Getting deployment configs"
                            def deploymentConfigs = openshift.selector("dc", [test: "true", app: "covid"])
                            echo "Rolling out deployments - ${deploymentConfigs.names()}"
                            deploymentConfigs.withEach
                            {
                                it.rollout()
                            }
                            deploymentConfigs.withEach 
                            {
                                it.related('pods').untilEach(1)
                                {
                                    echo "Waiting for pod ${it.name()} to deploy"
                                    return (it.object().status.phase == "Running")  
                                }                          
                            }
                        }
                    }
                } // script
            } // steps
        } // stage  
        stage('test')
        {
            steps
            {
                script
                {
                    openshift.withCluster()
                    {
                        openshift.withProject()
                        {

                            openshift.newApp(testTemplatePath)
                            echo "Building the test harness"
                            def buildConfigs = openshift.selector("bc",[app: "covid-python"])
                            echo "Got build configs - ${buildConfigs.names()}"
                            buildConfigs.withEach
                            {
                                def builds = openshift.selector(it.name()).related('builds')
                                builds.untilEach(1) 
                                {
                                    echo "Checking ${it.name()} build status"
                                    return (it.object().status.phase == "Complete")
                                }
                            }
                            echo "Builds complete"
                            echo "Waiting for test cycle to execute"

                        }
                    }
                }
            }
        }              
    }  // post 
    {
        always {
            script 
            {
                openshift.withCluster()
                {
                    openshift.withProject() {
                        // delete everything with this template label
                        openshift.selector("all", [ test : true ]).delete()
                    }  
                }   
            }    
        } 
    }
}