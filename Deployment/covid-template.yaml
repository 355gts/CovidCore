kind: Template
apiVersion: v1
metadata:
  name: covid-template
labels:
  template: covid-template
  app: covid
objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: covid-userservice-configmap
    namespace: covid-test
  data:
    appsettings.json: |
      {
        "log4net": {
          "ConfigFile": "log4net.config"
        },
        "queueConfiguration": {
          "hostname": "ec2-3-8-181-169.eu-west-2.compute.amazonaws.com",
          "username": "service",
          "password": "Service123Service123",
          "uri": "amqp://ec2-3-8-181-169.eu-west-2.compute.amazonaws.com:5672",
          "automaticRecoveryEnabled": true,
          "networkRecoveryIntervalSeconds": 10,
          "continuationTimeoutSeconds": 10,
          "handshakeContinuationTimeoutSeconds": 10,
          "requestedConnectionTimeoutSeconds": 60,
          "requestedHeartbeatSeconds": 60,
          "consumers": [
            {
              "name": "NewUserQueueConsumer",
              "queue": "CreateUser"
            },
            {
              "name": "FirstTopicConsumer",
              "exchange": "TopicExchange",
              "routingKey": "MyFirstRoutingKey"
            }
          ],
          "publishers": [
            {
              "name": "NewUserQueuePublisher",
              "queue": "User",
              "routingKey": "User",
              "exchange": "User"
            }
          ]
        },
        "services": [
          {
            "name": "covid",
            "rootUri": "http://covid-api:8080/"
          },
          {
            "name": "another",
            "rootUri": "https://another:api/"
          }
        ]
      }
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: covid
    name: covid
    namespace: covid-test
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: covid
      deploymentconfig: covid
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      app.openshift.io/connects-to: covid-api      
    labels:
      app: covid
      app.kubernetes.io/part-of: covid
    name: covid
    namespace: covid-test
  spec:
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      app: covid
      deploymentconfig: covid
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        labels:
          app: covid
          deploymentconfig: covid
      spec:
        containers:
        - image: image-registry.openshift-image-registry.svc:5000/covid-test/covid@sha256:db8f8ce23a4ab5fe89d5e67323d0aa097f4f2673580fd119a15228b593c455b8
          imagePullPolicy: Always
          name: covid
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /opt/app-root/app/appsettings.json
            name: covid-userservice-configmap
            subPath: appsettings.json
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: covid-userservice-configmap
          name: covid-userservice-configmap
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - covid
        from:
          kind: ImageStreamTag
          name: covid:latest
          namespace: covid-test
        lastTriggeredImage: image-registry.openshift-image-registry.svc:5000/covid-test/covid@sha256:db8f8ce23a4ab5fe89d5e67323d0aa097f4f2673580fd119a15228b593c455b8
      type: ImageChange  
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: covid
    name: covid
    namespace: covid-test
  spec:
    failedBuildsHistoryLimit: 5
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: covid:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/355gts/CovidCore.git
      type: Git
    strategy:
      sourceStrategy:
        env:
        - name: DOTNET_STARTUP_PROJECT
          value: Covid.UserService/Covid.UserService/Covid.UserService.csproj
        from:
          kind: ImageStreamTag
          name: dotnet:2.2
          namespace: openshift
      type: Source
    successfulBuildsHistoryLimit: 5
    triggers:
    - github:
        secret: JW8IorpgwO8PjgIQRH5p
      type: GitHub
    - generic:
        secret: 5_FoqXQXGzwRdy4d4ysu
      type: Generic
    - type: ConfigChange
    - imageChange:
        lastTriggeredImageID: image-registry.openshift-image-registry.svc:5000/openshift/dotnet@sha256:73237ba08fab93d93075551a95b9e0047e765b0285d98d2fbffb9bbd691c4512
      type: ImageChange
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    generation: 1
    labels:
      app: covid
    name: covid
    namespace: covid-test
  spec:
    lookupPolicy:
      local: false  
- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    annotations:
      openshift.io/host.generated: "true"
    labels:
      app: covid
    name: covid
    namespace: covid-test
    selfLink: /apis/route.openshift.io/v1/namespaces/covid-test/routes/covid
  spec:
    host: covid-covid-test.apps.ca-central-1.starter.openshift-online.com
    port:
      targetPort: 8080-tcp
    to:
      kind: Service
      name: covid
      weight: 100
    wildcardPolicy: None  